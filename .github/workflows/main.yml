name: foodgram_final

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SSH_KEY }}

    - name: Copy Docker Compose file to Server
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        source: "docker-compose.yml"
        target: "foodgram"

    - name: Deploy to Server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        script: |
          cd foodgram-progect-react
          sudo docker compose -f docker-compose.yml pull
          sudo docker compose -f docker-compose.yml down
          sudo docker compose -f docker-compose.yml up -d
          sudo docker compose -f docker-compose.yml exec backend python manage.py migrate
          sudo docker compose -f docker-compose.yml exec backend python manage.py collectstatic --noinput
          sudo docker compose -f docker-compose.yml exec backend cp -r /app/collected_static/. /static/static/
  
  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: Send Telegram Notification
      if: success()
      env:
        TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        GITHUB_ACTOR: ${{ github.actor }}
      run: |
        MESSAGE="Deployment successful by ${GITHUB_ACTOR}"
        curl -s -X POST https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage \
          -d chat_id=${TELEGRAM_CHAT_ID} \
          -d text="${MESSAGE}"